@model IEnumerable<UserDisplayVM>


<a class="btn btn-primary" asp-action="AddEditUser">Create User</a>
<div class="card border-primary my-3">
    <div class="card-header">All Users</div>
    <div class="card-body">
        <div class="table-wrapper">
            <table class="table table-striped" style="width:100%">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Created At</th>
                        <th>Channel Name</th>
                        <th>Assigned Roles</th>
                        <th>Is Locked</th>
                        <th class="text-center">
                            Lock / Unlock
                        </th>
                        <th class="text-center">
                            Edit / Delete
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model)
                    {
                        <tr>
                            <td>@user.Name</td>
                            <td>@user.Email</td>
                            <td>@user.CreatedAt.ToLongDateString()</td>
                            <td>
                                <a asp-controller="Member" asp-action="Channel" asp-route-id="@user.ChannelId">@user.ChannelName</a>
                            </td>
                            <td>
                                @for (int i = 0; i < user.AssignedRoles.Count(); i++)
                                {
                                    <span>
                                        @user.AssignedRoles.ElementAt(i) @(i + 1 < user.AssignedRoles.Count() ? "," : "")
                                    </span>
                                }
                            </td>
                            <td>@user.IsLocked</td>
                            <td class="text-center">
                                <form method="post">
                                    @if (!user.IsLocked)
                                    {
                                        <button asp-action="LockUser" asp-route-id="@user.Id" class="btn btn-warning btn-sm me-2">
                                            Lock
                                        </button>
                                    }
                                    else
                                    {
                                        <button asp-action="UnlockUser" asp-route-id="@user.Id" class="btn btn-info btn-sm me-2">
                                            Unlock
                                        </button>
                                    }
                                </form>
                            </td>
                            <td class="text-center">
                                <a class="btn btn-primary btn-sm me-2" asp-action="AddEditUser" asp-route-id="@user.Id">
                                    Edit
                                </a>
                                <a class="btn btn-danger btn-sm me-2" onclick="deleteUser('@user.Id', '@user.Name')">
                                    Delete
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        async function confirmation(message) {
            const result = await Swal.fire({
                title: 'Are you sure?',
                text: message,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'Cancel'
            });
            return result.isConfirmed;
        }

        async function deleteUser(id, name) {
            if (!await confirmation(`Permanently delete user "${name}"?`)) {
                return;
            }

            const deleteBtn = document.querySelector(`a[onclick*="deleteUser('${id}'"]`);
            if (!deleteBtn) {
                await Swal.fire('Error!', 'Could not find user row', 'error');
                return;
            }

            try {
                
                const originalHtml = deleteBtn.innerHTML;
                deleteBtn.innerHTML = '<span class="spinner-border spinner-border-sm"></span>';
                deleteBtn.classList.add('disabled');

                const response = await fetch('/Admin/DeleteUser', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ id })
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const data = await response.json();

                if (data.isSuccess) {
                    
                    const row = deleteBtn.closest('tr');
                    row.style.transition = 'opacity 0.3s ease';
                    row.style.opacity = '0';

                    
                    await Promise.all([
                        new Promise(resolve => setTimeout(resolve, 300)),
                        Swal.fire({
                            title: 'Deleted!',
                            text: `User ${name} removed`,
                            icon: 'success',
                            timer: 2000,
                            showConfirmButton: false
                        })
                    ]);

                    
                    row.remove();
                } else {
                    throw new Error(data.message || 'Deletion failed');
                }
            } catch (error) {
                await Swal.fire('Error!', error.message, 'error');
               
                deleteBtn.innerHTML = 'Delete';
                deleteBtn.classList.remove('disabled');
            }
        }
    </script>
}